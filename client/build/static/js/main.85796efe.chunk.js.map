{"version":3,"sources":["components/GlobalNavbar.js","components/Header.js","utils/api.js","components/SaveButton.js","components/Results.js","components/SearchForm.js","pages/SearchPage.js","components/DeleteButton.js","components/SavedResults.js","pages/SavedPage.js","pages/NotFound.js","App.js","registerServiceWorker.js","index.js"],"names":["GlobalNavbar","props","Navbar","bg","variant","Brand","href","Nav","className","Link","Header","Jumbotron","api","getBooks","axios","get","addBook","book","console","log","post","deleteBook","bookId","delete","SaveButton","Button","onClick","then","data","catch","err","Results","books","Card","Body","length","map","src","volumeInfo","imageLinks","thumbnail","title","authors","description","id","SearchForm","setBooks","useState","APIKEY","bookSearch","useRef","Form","onSubmit","event","preventDefault","current","value","items","Group","controlId","Label","Control","ref","type","placeholder","SearchPage","DeleteButton","SavedResults","Title","link","_id","image","SavedPage","res","useEffect","NotFound","App","isloggedin","Container","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.85796efe.chunk.js","sourcesContent":["import React from \"react\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport { GiBookshelf } from \"react-icons/gi\";\n\nfunction GlobalNavbar(props) {\n  return (\n    <Navbar bg=\"primary\" variant=\"dark\">\n      <Navbar.Brand href=\"#home\">\n        {\" \"}\n        <GiBookshelf /> My Bookshelves\n      </Navbar.Brand>\n      <Nav className=\"mr-auto\">\n        <Nav.Link href=\"/\">Search</Nav.Link>\n        <Nav.Link href=\"/saved\">Saved</Nav.Link>\n      </Nav>\n    </Navbar>\n  );\n}\n\nexport default GlobalNavbar;\n","import React from \"react\";\nimport { Jumbotron } from \"react-bootstrap\";\n\nexport default function Header() {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Welcome to my bookshelves app</h1>\n        <p>\n          If you are wanting to create a reading list with any book Google can\n          finde, this is the app for you!\n        </p>\n      </Jumbotron>\n    </div>\n  );\n}\n","import axios from \"axios\";\n\nconst api = {\n  async getBooks() {\n    return axios.get(\"/api/books\");\n  },\n\n  async addBook(book) {\n    console.log(\"added books\", { book });\n    return axios.post(\"/api/books\", { ...book });\n  },\n\n  async deleteBook(bookId) {\n    return axios.delete(`/api/books/${bookId}`);\n  },\n};\n\nexport default api;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport api from \"../utils/api\";\n\nfunction SaveButton({ book }) {\n  const saveBook = () => {\n    api\n      .addBook(book)\n      .then((data) => {\n        console.log(\"book data\", data);\n        console.log(\"yes, book added\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  // console.log(\"Save Book Button\", book);\n\n  return <Button onClick={saveBook}>Save</Button>;\n}\n\nexport default SaveButton;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport SaveButton from \"./SaveButton\";\n\nfunction Results({ books }) {\n  return (\n    <Card className=\"my-4\">\n      <Card.Body>\n        {books.length ? (\n          <div>\n            <h2> Search Results</h2>\n            {books.map((book) => (\n              <Card key={book.id}>\n                <Card.Body>\n                  <SaveButton book={book} />\n                  <p className=\"my-4\">\n                    <img src={book.volumeInfo.imageLinks.thumbnail} />\n                  </p>\n                  <h2 className=\"my-3\">\n                    \"{book.volumeInfo.title}\" by {book.volumeInfo.authors}\n                  </h2>\n                  <h3>Book description:</h3>\n                  <p>{book.volumeInfo.description}</p>\n                </Card.Body>\n              </Card>\n            ))}\n          </div>\n        ) : (\n          <div>\n            <h2>Search Results</h2>\n          </div>\n        )}\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default Results;\n","import axios from \"axios\";\nimport React, { useRef, useState } from \"react\";\nimport { Button, Card, Form } from \"react-bootstrap\";\n\nfunction SearchForm({ setBooks }) {\n  const [APIKEY, setAPIKEY] = useState(\n    \"AIzaSyBN5BdHj9x_qT1p_mD1809eAejL-c-U7zE\"\n  );\n\n  const bookSearch = useRef({ setBooks });\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    axios\n      .get(\n        \"https://www.googleapis.com/books/v1/volumes?q=\" +\n          bookSearch.current.value +\n          \"&key=\" +\n          APIKEY\n      )\n      .then(({ data }) => {\n        console.log(\"Google Books!\", data.items);\n        setBooks(data.items);\n      });\n  };\n\n  return (\n    <Card>\n      <Card.Body>\n        <h2>Search</h2>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId=\"formBookName\">\n            <Form.Label>Book Name</Form.Label>\n            <Form.Control\n              ref={bookSearch}\n              type=\"text\"\n              placeholder=\"Enter the name of a book or author.\"\n            />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Search\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default SearchForm;\n","import React, { useState } from \"react\";\nimport Results from \"../components/Results\";\nimport SearchForm from \"../components/SearchForm\";\n\nfunction SearchPage() {\n  const [books, setBooks] = useState([]);\n\n  // console.log(\"Books\", books);\n\n  return (\n    <div>\n      <SearchForm setBooks={setBooks} />\n      <Results books={books} />\n    </div>\n  );\n}\n\nexport default SearchPage;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport api from \"../utils/api\";\n\nfunction DeleteButton({ bookId, getBooks, ...props }) {\n  const deleteBook = () => {\n    api\n      .deleteBook(bookId)\n      .then((book) => {\n        console.log(\"deleted!\", book);\n        return getBooks();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  console.log(\"deleteBook\", bookId);\n\n  return (\n    <Button onClick={deleteBook} {...props}>\n      Delete\n    </Button>\n  );\n}\n\nexport default DeleteButton;\n","import React from \"react\";\nimport { Button, Card } from \"react-bootstrap\";\nimport DeleteButton from \"./DeleteButton\";\n\nfunction SavedResults({ books, getBooks }) {\n  return (\n    <Card className=\"my-4\">\n      <Card.Body>\n        {books.length ? (\n          <div>\n            <h2> Results</h2>\n            {books.map((book) => (\n              <Card className=\"my-4\" key={books._id}>\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <Button href={book.link}>View</Button>\n                  <DeleteButton\n                    bookId={book._id}\n                    getBooks={getBooks}\n                    className=\"ml-2\"\n                  />\n                  <p className=\"my-4\">\n                    <img src={book.image} />\n                  </p>\n                  <h2 className=\"my-3\">\n                    \"{book.title}\" by {book.authors}\n                  </h2>\n                  <h3>Book description:</h3>\n                  <p>{book.description}</p>\n                </Card.Body>\n              </Card>\n            ))}\n          </div>\n        ) : (\n          <div>\n            <h2>No Search Result</h2>\n          </div>\n        )}\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default SavedResults;\n","import React, { useEffect, useState } from \"react\";\nimport SavedResults from \"../components/SavedResults\";\nimport api from \"../utils/api\";\n\nfunction SavedPage() {\n  const [books, setBooks] = useState([]);\n\n  const getBooks = () => {\n    return api.getBooks().then((res) => {\n      console.log(\"getbooks data\", res);\n      setBooks(res.data);\n    });\n  };\n\n  useEffect(() => {\n    getBooks();\n  }, [setBooks]);\n\n  // console.log(\"savedBooks\", books);\n\n  return (\n    <div>\n      <h1> Saved Books</h1>\n      <SavedResults books={books} getBooks={getBooks} />\n    </div>\n  );\n}\n\nexport default SavedPage;\n","import React from \"react\";\n\nfunction NotFound() {\n  return (\n    <div>\n      <h1> PAGE Not Found</h1>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport \"./main.sass\";\nimport GlobalNavbar from \"./components/GlobalNavbar\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport { Container } from \"react-bootstrap\";\nimport SearchPage from \"./pages/SearchPage\";\nimport SavedPage from \"./pages/SavedPage\";\nimport NotFound from \"./pages/NotFound\";\n\nfunction App() {\n  return (\n    <Router>\n      <GlobalNavbar isloggedin={false} />\n      <Container className=\"py-5\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={SearchPage} />\n          <Route exact path=\"/saved\" component={SavedPage} />\n          <Route component={NotFound} />\n        </Switch>\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}